{"ast":null,"code":"import { ADD_POST, FETCH_POSTS, ADD_COMMENT } from './types';\nimport axios from 'axios';\nlet x = 0,\n    newData = [];\nlet limit = 10,\n    page = 0;\nexport const fetchPosts = () => dispatch => {\n  if (x === 0) {\n    axios.post('/api/fetchPosts', {\n      page,\n      limit\n    }).then(posts => {\n      newData = posts.data;\n      console.log('First x=0:' + newData);\n      dispatch({\n        type: FETCH_POSTS,\n        payload: posts.data\n      });\n      page = page + 1;\n      x = 1;\n    });\n  } else {\n    axios.post('/api/fetchPosts', {\n      page,\n      limit\n    }).then(posts => {\n      //   console.log('Old:'+ newData.length)\n      newData = [...newData, ...posts.data]; //   console.log('New:'+ newData.length)\n\n      dispatch({\n        type: FETCH_POSTS,\n        payload: newData\n      });\n      page = page + 1;\n    });\n  }\n};\nexport const addPost = post => dispatch => {\n  if (post.get('myImage') === '') console.log('no image in front');else {\n    axios({\n      method: 'post',\n      url: '/api/addPost',\n      data: post,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(item => dispatch({\n      type: ADD_POST,\n      payload: item.data\n    })).catch(err => {\n      console.log(err);\n    });\n  }\n};\nexport const addComment = comment => dispatch => {\n  axios({\n    method: 'post',\n    url: '/api/addComment',\n    data: comment\n  }).then(item => dispatch({\n    type: ADD_COMMENT,\n    payload: item.data\n  })).catch(err => {\n    console.log(err);\n  });\n};\nexport const addLike = like => dispatch => {\n  axios({\n    method: 'post',\n    url: '/api/addLike',\n    data: like\n  }).then(item => dispatch({\n    type: ADD_LIKE,\n    payload: item.data\n  })).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["E:/jamia-book/client/src/actions/postActions.js"],"names":["ADD_POST","FETCH_POSTS","ADD_COMMENT","axios","x","newData","limit","page","fetchPosts","dispatch","post","then","posts","data","console","log","type","payload","addPost","get","method","url","headers","item","catch","err","addComment","comment","addLike","like","ADD_LIKE"],"mappings":"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","sourcesContent":["import { ADD_POST, FETCH_POSTS, ADD_COMMENT, } from './types';\r\nimport axios from 'axios';\r\nlet x = 0, newData = [];\r\nlet limit = 10, page = 0;\r\n\r\nexport const fetchPosts = () => dispatch => {\r\n\r\n    if(x === 0){\r\n        axios.post('/api/fetchPosts',{ page, limit })\r\n        .then(posts => {\r\n          newData = posts.data\r\n          console.log('First x=0:'+ newData)\r\n          dispatch({\r\n              type: FETCH_POSTS,\r\n              payload: posts.data\r\n          })\r\n          page = page + 1\r\n          x=1\r\n      })\r\n    }else{\r\n      axios.post('/api/fetchPosts',{ page, limit })\r\n        .then(posts =>{\r\n        //   console.log('Old:'+ newData.length)\r\n          newData = [...newData,...posts.data]\r\n        //   console.log('New:'+ newData.length)\r\n          dispatch({\r\n              type: FETCH_POSTS,\r\n              payload: newData\r\n          }) \r\n        page = page + 1\r\n      })\r\n    }\r\n      \r\n      \r\n};\r\n\r\n\r\nexport const addPost = ( post ) => dispatch => {\r\n  if(post.get('myImage') === '') console.log('no image in front');\r\n  else {\r\n      axios({\r\n          method: 'post',\r\n          url: '/api/addPost',\r\n          data: post,\r\n          headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n      }\r\n      }).then(item =>\r\n          dispatch({\r\n          type: ADD_POST,\r\n          payload: item.data\r\n          })\r\n      ).catch(err => {\r\n          console.log(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const addComment = ( comment ) => dispatch => {\r\n      axios({\r\n          method: 'post',\r\n          url: '/api/addComment',\r\n          data: comment,\r\n      }).then(item =>\r\n          dispatch({\r\n          type: ADD_COMMENT,\r\n          payload: item.data\r\n          })\r\n      ).catch(err => {\r\n          console.log(err)\r\n      })\r\n}\r\n\r\nexport const addLike = ( like ) => dispatch => {\r\n  axios({\r\n      method: 'post',\r\n      url: '/api/addLike',\r\n      data: like,\r\n  }).then(item =>\r\n      dispatch({\r\n      type: ADD_LIKE,\r\n      payload: item.data\r\n      })\r\n  ).catch(err => {\r\n      console.log(err)\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}